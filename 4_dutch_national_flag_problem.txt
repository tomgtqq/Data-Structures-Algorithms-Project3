Because there are only 0, 1, and 2 in the array, so we can move all of the 0 at the start of the array and move all of the 2 in the end of array. The 1 will automatically end up in the middle. we can set "start" to trace the right border of 0, set "end" to the left border of 2, set "curr" to trace the current element.
if the current element is equal 0, we swap "curr" with "start" and then "curr" plus 1 to check the next element. The "start" plus 1 is moving the 0 to the right border. if the current element is equal 2. we can swap with the "end" element. then "end" plus 1 is moving the 2 the left border. but we can't let "curr" plus 1. because we did check the "end" element. It could be 1 or 2 or 0. when "curr" meet "end", We finished the sorting.We did the single-traversal. So the time complexity is O(n). Becuase It's in-place operation. The space complexity is O(1).